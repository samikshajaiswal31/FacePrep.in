/*import java.util.Scanner;
public class example 
{
	public static void main(String[] args) 
	{
	   Scanner in = new Scanner(System.in);
	   int count = in.nextInt();
	   while(count > 0)
	   {
		   System.out.println("Hello "+count);
		   --count;
	   }
	}
}*/

/*class Main
{
   public static void main(String args[])
   {
      int n = 5, count = 2;
      while(count <= n)
      {
         System.out.println("Hello "+count);	 
         count = count + 1;
      }
   }
}*/

/*class Main
{
   public static void main(String args[])
   {
      int n = 5, count = 1;
      while(count < n)
      {
         System.out.println("Hello "+count);	 
         count = count + 1;
      }
   }
}*/

/*class Main
{
   public static void main(String args[])
   {
      int n = 5, count = 1;
      while(count != n)
      {
         System.out.println("Hello "+count);	 
         count = count + 1;
      }
   }
}*/


/* Printing "I am a Java Developer" n times
   Q) Write a JAVA code to print the sentence "I am a Java Developer" for 'n' number of times.
   Sample Input:  n = 2
   Sample Output: I am a Java Developer
                  I am a Java Developer  */

/*import java.util.Scanner;
class Main 
{
	public static void main (String[] args)
	{
	    Scanner in = new Scanner(System.in);
        int n = in.nextInt(), count = 1;
        while(count <= n)
        {
           System.out.println("I am a Java Developer!");
           count = count + 1 ;
        }      
	}
}*/

/*import java.util.Scanner;
class Main
{
   public static void main(String args[])
   {
      Scanner in = new Scanner(System.in);
      int n = in.nextInt(), sum =0, count = 1;
      while(count <= n)
      {
        sum = sum + count;
        count = count + 1;
      }
      System.out.println(sum);	
    }
 }*/



/* Q) Print all odd numbers from 1 to n.
 * START
 * INPUT: n
 * count = 1
 * WHILE (count <= n)
 * {
 * 		IF(count % 2 == 1)
 * 		{
 * 			PRINT count 
 * 		}
 * count = count + 1
 * }
 * STOP
*/

/*import java.util.Scanner;
class Main
{
  public static void main(String args[])
  {
      Scanner in = new Scanner(System.in);
      int n = in.nextInt(), count = 1;
      while(count <= n)
      {
         if (count % 2 == 1)
            System.out.println(count);
         count = count + 1;
      }
  }
}*/

/* Use one variable to generate odd numbers. 
   Use another variable to count the number of odd numbers generated.
   
   Here is your pseudocode:
 * START
 * INPUT: n
 * count = 1
 * temp = 1
 * WHILE (temp <= n)
 * {
 *    IF(count % 2 == 1)
 *    {
 *       PRINT count
 *       temp = temp + 1 //counts the number till it reaches n
 *    }
 * }
 * count = count+1 //counts the number of odd numbers printed
 * STOP   
*/

/*import java.util.Scanner;
class Main
{
  public static void main(String args[])
  {
     Scanner in = new Scanner(System.in);
     int n = in.nextInt(), count = 1, temp = 0;
     while(temp < n)
     {
       if (count % 2 == 1)
       {
         System.out.println(count);
         temp = temp + 1;
       }
       count = count + 1;
     }
     System.out.println("Total odd nos: "+ temp);
  }
}*/


// The previous code to work using just one of these variables?
/*import java.util.Scanner;
class Main
{
  public static void main(String args[])
  {
     Scanner in = new Scanner(System.in);
     int n = in.nextInt();
     int count = 1;
     while(count <= n)
     {
        if(count % 2 == 1)
           System.out.println(count);             // 5...1,3,5..but...
        count = count+1;
     }
  }
} */

/* Here's your hint:
   When n=5, let's write down the odd numbers - 1, 3, 5, 7, 9
   When n=6, let's write down the odd numbers - 1, 3, 5, 7, 9, 11
   When n=7, let's write down the odd numbers - 1, 3, 5, 7, 9, 11, 13
   When n=8, let's write down the odd numbers - 1, 3, 5, 7, 9, 11, 13, 15
  
   You can see that when printing n odd numbers, the last number is always [2n-1]. 
   But in the program we check for [count < n]. This leads to less numbers being printed. 
   The correct condition to check would be [count <= 2n].     */

/*import java.util.Scanner;
class Main
{
  public static void main(String args[])
  {
     Scanner in = new Scanner(System.in);
     int n = in.nextInt();
     int count = 1;
     while(count <= 2*n)
     {
       if(count % 2 == 1)
          System.out.println(count);
       count = count + 1;
     }
  }
}*/


/* Write a program to count the number of digits in a given number. 
   For example, if the input is 257, then output should be 3  */
/*import java.util.Scanner;
class Main
{
	public static void main(String args[])
	{
		Scanner in = new Scanner(System.in);
		int num = in.nextInt(), count = 1;
		while(num > 10)
		{
			num = (num / 10);
			count++;
		}
		System.out.println(count);
	}
}*/

/*
import java.util.Scanner;
class Main
{
  public static void main(String args[])
  {
     Scanner in = new Scanner(System.in);
     int n = in.nextInt(), count = 0;
     if( n == 0)
       System.out.println(1);
     else
     {
        while(n > 0)
        {
          n = n / 10;
          count = count + 1;
        }
        System.out.println(count);
     }
  }
}
 */
 
------------------------------------------------------------------------------------------------------------------------------------------ 
 /* Write a program to check whether the given number is prime or not.
    For example, if the input is 13, the output should be "Prime". If the input is 15, the output should be "Non-prime".  */
/*
import java.util.Scanner;
class Main
{
 public static void main(String args[])
 {
   Scanner in = new Scanner(System.in);
   int n = in.nextInt();
   int num = 1; 
   int factors_count = 0;
   while(num <= n)
   {
      if(n%num==0)
         factors_count = factors_count+1;
       num = num+1;
   }
   if(factors_count==2)
      System.out.println("Prime number");
   else
      System.out.println("Non prime number");
  }
}
*/

/*
import java.util.Scanner;
class Main
{
 public static void main(String args[])
 {
   Scanner in = new Scanner(System.in);
   int n = in.nextInt(), num = 2, is_prime = 1; 
   while(num <= n/2)
   {
      if(n%num == 0)
      {
         is_prime = 0;
         break;
      }  
      num = num + 1;
   }
   if(is_prime == 1)
      System.out.println("Prime number");
   else
      System.out.println("Non prime number");
  }
}
*/














